<%
require "/opt/ood/lib/hostspecs.rb"
host_specs = getHostSpecs()
libpath = host_specs[:libpath]
hostname = host_specs[:host]

require libpath+"/process_partitions.rb"
partitions = processPartitions(libpath)

app_name = "Jupyter"
app_root = "/var/www/ood/apps/modules"+"/"+app_name
%>
---
cluster: <%= hostname %>
title: <%= app_name %>
form:
  - version
  - jupyterlab_mode
  - extra_jupyter_args
  - bc_num_hours
  - bc_num_cores
  - bc_amt_mem
  - partitions
  - num_gpu
  - reservation
  - additional_modules
  - bc_email_on_started
  - advanced_options
  - bc_account
  - advanced_job_options
attributes:
  version:
    widget: "select"
    label: <% app_name %> version
    options:
      <% IO.foreach(app_root+"/modules") do |line| %>
      - [ "<%= line %>" ]
      <% end %>
  jupyterlab_mode:
    widget: "radio"
    value: "1"
    options:
      - ["Jupyter Lab", "1"]
      - ["Jupyter Notebook", "0"]
 # Any extra command line arguments to feed to the `jupyter notebook ...`
  # command that launches the Jupyter notebook within the batch job
  extra_jupyter_args: ""
  bc_num_hours:
    widget: "number_field"
    label: "Number of hours"
    value: 6
    min: 1
  bc_num_cores:
    widget: "number_field"
    label: "Number of cores"
    value: 1
    help: "The equivalent SLURM option is `--cpus-per-task`"
    min: 1
    step: 1
  bc_amt_mem:
    widget: "number_field"
    label: "Memory per CPU core in GiB"
    value: 5
    min: 1
    step: 1
  partitions:
    widget: "select"
    label: "Partitions"
    options:
      <%
      partitions.each do |partition|
        fields = partition.split(";")
      %>
      - [
          "<%= fields[0] %>",
          "<%= fields[1] %>",
          data-max-hours: <%= fields[2] %>,
          data-has-gpu: <%= fields[3] %> 
        ]
      <%
      end
      %>

  num_gpu:
    widget: "number_field"
    label: "Number of GPUS per node"
    help: "Set number of GPUs per node. The minimal value is 1 for partition `gpu`, `gpu-devel`, and `scavenge-gpu`."
    min: 0
    max: 8

  reservation:
    text_field: ""
    label: "Reservation (optional)"

  advanced_options:
    widget: "check_box"
    label: "Check the box to view more options"

  bc_account:
    label: "Slurm account (optional)"
    help: "This field is needed **only if** you are working with a group other than your default group.  
           Leave it blank if you don't know what to provide."

  # Any extra command line arguments to feed to the `jupyter notebook ...`
  # command that launches the Jupyter notebook within the batch job
  extra_jupyter_args: ""

  additional_modules:
    widget: "text_field"
    label:  "Additional modules for Jupyter (optional)"
    value:  ""
    help:   "Provide addtional modules for Jupyter. Module names are separated by a space."
  
  advanced_job_options:
    widget: "text_area"
    label:  "Additional job options (optional)"
    value:  ""
    help: "Provide additional job options for Slurm, **one option per line**. Options provided here have higher precedence over options specified earlier in the form; e.g.,

    --constraint=icelake"
